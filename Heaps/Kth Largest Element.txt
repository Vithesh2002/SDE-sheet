class Solution {
    public int findKthLargest(int[] arr, int k) {
        int n=arr.length;
        for(int i=n-1;i>=0;i--)heapify(arr,i,n);

        for(int i=0;i<k-1;i++){
            swap(arr,0,n-i-1);
            heapify(arr,0,n-i-1);
        }
        return arr[0];
    }
    public void heapify(int[] arr,int i,int n){
        int largest=i;
        int l=2*i+1;
        int r=2*i+2;

        if(l<n && arr[largest]<arr[l])largest=l;
        if(r<n && arr[largest]<arr[r])largest=r;

        if(largest!=i){
            swap(arr,largest,i);
            heapify(arr,largest,n);
        }
    }
    public void swap(int[]arr,int i,int j){
        int temp=arr[i];
        arr[i]=arr[j];
        arr[j]=temp;
    }
}