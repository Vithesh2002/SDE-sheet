class Solution {
    public List<List<String>> partition(String s) {
        List<List<String>>al=new ArrayList<>();
        List<String>li=new ArrayList<>();
        dfs(s.length(),0,s,al,li);
        return al;
    }
    public void dfs(int n,int i,String s,List<List<String>>al,List<String>li)
    {  
        if(i>=n){
            al.add(new ArrayList<>(li));
            return;
        }
        for(int j=i;j<n;j++){
            if(!check(s.substring(i,j+1)))continue;
            li.add(s.substring(i,j+1));
            dfs(s.length(),j+1,s,al,li);
            li.remove(li.size()-1);
        }
    }
    public boolean check(String sb)
    {
        int n=sb.length();
        for(int i=0;i<n/2;i++)
            if(sb.charAt(i)!=sb.charAt(n-i-1))
                return false;
        return true;
    }
}