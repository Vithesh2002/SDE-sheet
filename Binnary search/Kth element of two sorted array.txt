class Solution {
    public long kthElement( int nums1[], int nums2[], int n, int m, int k) {
        if(n>m)return kthElement(nums2,nums1,m,n,k);
        int low=Math.max(0,k-m),high=Math.min(k,n);
        
        while(low<=high)
        {
            int cut1=(low+high)>>1;
            int cut2=k-cut1;
            
            int left1=cut1==0?Integer.MIN_VALUE:nums1[cut1-1];
            int left2=cut2==0?Integer.MIN_VALUE:nums2[cut2-1];
            
            int right1=cut1==n?Integer.MAX_VALUE:nums1[cut1];
            int right2=cut2==m?Integer.MAX_VALUE:nums2[cut2];
            
            if(left1<=right2 && left2<=right1)
            {
                return Math.max(left1,left2);
            }
            else if(left1>left2) high=cut1-1;
            
            else low=cut1+1;
        }
        return 0l;
    }
}
