class Solution
{
    //Function to get the maximum total value in the knapsack.
    double fractionalKnapsack(int W, Item arr[], int n) 
    {
        compare c=new compare();
        Arrays.sort(arr,(a,b)->c.compare(a,b));
        double total=0l;
        for(Item i:arr)
        {
            if(W<=0)break;
            
            if(i.weight<=W)
            {
                W-=i.weight;
                total+=i.value;
            }
            else{
                total+=(double)((double)i.value*(double)W)/(double)i.weight;
                break;
            }
        }
        return total;
    }
    class compare implements Comparator<Item>
    {
        @Override
        public int compare(Item a,Item b)
        {
            double x=(double)a.value/(double)a.weight;
            double y=(double)b.value/(double)b.weight;
            if(x<y)return 1;
            else if(x>y)return -1;
            else if(x==y)return 0;
            return 0;
        }
    }
}