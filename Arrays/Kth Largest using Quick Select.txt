class Solution {
    public int findKthLargest(int[] nums, int k) {
        Random r=new Random();
        return quicksort(nums,0,nums.length-1,nums.length-k,r);
    }

    public int quicksort(int[]arr,int low,int high,int k,Random r){
        if(low==high)return arr[low];
        int p=low;
        int i=low+1,j=high;

        int pos=r.nextInt(high-low)+low;
        swap(arr,p,pos);

        while(i<=j){
            while(i<=j && arr[i]<=arr[p])i++;
            while(i<=j && arr[j]>=arr[p])j--;
            if(i<j)swap(arr,i++,j--);
        }
        swap(arr,p,j);
        if(j==k)return arr[j];
        else if (j<k) return quicksort(arr,j+1,high,k,r);
        else return quicksort(arr,low,j-1,k,r);
     }
     public void swap(int[]arr,int i,int j){
         int temp=arr[i];
         arr[i]=arr[j];
         arr[j]=temp;
     }
     
}