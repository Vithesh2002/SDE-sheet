class Solution {
    public static ArrayList<String> findPath(int[][] m, int n) {
        ArrayList<String>li=new ArrayList<>();
        boolean[][]vis=new boolean[n][n];
        dfs(0,0,m,n,"",li,vis);
        return li;
    }
    public static void dfs(int i,int j,int[][] m,int n,String s,ArrayList<String>li,boolean[][]vis)
    {
        if(i<0 || j<0 || i>=n || j>=n|| m[i][j]==0 || vis[i][j]) return;
        
        if(i==n-1 && j==n-1)
        {
            li.add(s);
            return;
        } 
        
        vis[i][j]=true;

        dfs(i+1,j,m,n,s+"D",li,vis);
        dfs(i,j+1,m,n,s+"R",li,vis);
        dfs(i-1,j,m,n,s+"U",li,vis);
        dfs(i,j-1,m,n,s+"L",li,vis);
        
        vis[i][j]=false;
        
    }
}